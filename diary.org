* template
** architecture n

*** architecture

*** Training accuracy

* 2019/10/18
** preferred architecture order 
5
4
2
1
3
** architecture 1
OK
*** architecture
model.add(Dense(32, activation='relu', input_dim=X.shape[1]))
model.add(Dense(16, activation='relu'))
model.add(Dense(8, activation='relu'))
model.add(Dense(1, activation='relu'))
*** Training accuracy
Epoch 1/10
12000000/12000000 [==============================] - 20s 2us/step - loss: 7.0564 - mse: 38505705472.0000 - rmsle: 0.0737
Epoch 2/10
12000000/12000000 [==============================] - 20s 2us/step - loss: 3.7552 - mse: 38521901056.0000 - rmsle: 0.0559
Epoch 3/10
12000000/12000000 [==============================] - 20s 2us/step - loss: 3.4209 - mse: 38521929728.0000 - rmsle: 0.0534
Epoch 4/10
12000000/12000000 [==============================] - 20s 2us/step - loss: 3.2327 - mse: 38522105856.0000 - rmsle: 0.0519
Epoch 5/10
12000000/12000000 [==============================] - 20s 2us/step - loss: 3.1479 - mse: 38522044416.0000 - rmsle: 0.0512
Epoch 6/10
12000000/12000000 [==============================] - 21s 2us/step - loss: 3.1074 - mse: 38522187776.0000 - rmsle: 0.0509
Epoch 7/10
12000000/12000000 [==============================] - 21s 2us/step - loss: 3.0664 - mse: 38522073088.0000 - rmsle: 0.0505
Epoch 8/10
12000000/12000000 [==============================] - 21s 2us/step - loss: 3.0372 - mse: 38522003456.0000 - rmsle: 0.0503
Epoch 9/10
12000000/12000000 [==============================] - 21s 2us/step - loss: 3.0122 - mse: 38521851904.0000 - rmsle: 0.0501
Epoch 10/10
12000000/12000000 [==============================] - 21s 2us/step - loss: 2.9927 - mse: 38521737216.0000 - rmsle: 0.0499
<keras.callbacks.callbacks.History at 0x7fe78799b780>
** architecture 2
OK
*** architecture
model.add(Dense(8, activation='relu', input_dim=X.shape[1]))
model.add(Dense(6, activation='relu'))
model.add(Dense(4, activation='relu'))
model.add(Dense(1, activation='relu'))
*** Training accuracy
Epoch 1/3
12000000/12000000 [==============================] - 18s 1us/step - loss: 5.7390 - mse: 38522814464.0000 - rmsle: 0.0666
Epoch 2/3
12000000/12000000 [==============================] - 17s 1us/step - loss: 3.8251 - mse: 38521810944.0000 - rmsle: 0.0565
Epoch 3/3
12000000/12000000 [==============================] - 18s 1us/step - loss: 3.7210 - mse: 38521892864.0000 - rmsle: 0.0557
** architecture 3
Bad
*** architecture
model = Sequential()
model.add(Dense(8, activation='relu', input_dim=X.shape[1]))
model.add(Dropout(1/8))
model.add(Dense(6, activation='relu'))
model.add(Dropout(1/6))
model.add(Dense(4, activation='relu'))
model.add(Dropout(1/4))
model.add(Dense(2, activation='relu'))
model.add(Dense(1, activation='relu'))
*** Training accuracy
Epoch 1/3
12000000/12000000 [==============================] - 24s 2us/step - loss: 21.4340 - mse: 38523756544.0000 - rmsle: 0.1336
Epoch 2/3
12000000/12000000 [==============================] - 23s 2us/step - loss: 21.4340 - mse: 38523777024.0000 - rmsle: 0.1336
Epoch 3/3
12000000/12000000 [==============================] - 24s 2us/step - loss: 21.4340 - mse: 38523805696.0000 - rmsle: 0.1336

** architecture 4
OK
*** architecture
model = Sequential()
model.add(Dense(8, activation='relu', input_dim=X.shape[1]))
model.add(Dropout(1/8))
model.add(Dense(6, activation='relu'))
model.add(Dense(4, activation='relu'))
model.add(Dense(2, activation='relu'))
model.add(Dense(1, activation='relu'))
*** Training accuracy
Epoch 1/3
12000000/12000000 [==============================] - 21s 2us/step - loss: 6.2549 - mse: 38523076608.0000 - rmsle: 0.0693
Epoch 2/3
12000000/12000000 [==============================] - 20s 2us/step - loss: 3.8719 - mse: 38521921536.0000 - rmsle: 0.0568
Epoch 3/3
12000000/12000000 [==============================] - 22s 2us/step - loss: 3.8358 - mse: 38521810944.0000 - rmsle: 0.0565
** architecture 5
OK
*** architecture
model = Sequential()
model.add(Dense(8, activation='relu', input_dim=X.shape[1]))
model.add(Dropout(1/8))
model.add(Dense(6, activation='relu'))
model.add(Dropout(1/6))
model.add(Dense(4, activation='relu'))
model.add(Dense(2, activation='relu'))
model.add(Dense(1, activation='relu'))
*** Training accuracy
Epoch 1/3
12000000/12000000 [==============================] - 23s 2us/step - loss: 5.5262 - mse: 38522863616.0000 - rmsle: 0.0662
Epoch 2/3
12000000/12000000 [==============================] - 22s 2us/step - loss: 3.9023 - mse: 38521790464.0000 - rmsle: 0.0570
Epoch 3/3
12000000/12000000 [==============================] - 23s 2us/step - loss: 3.7183 - mse: 38521839616.0000 - rmsle: 0.0557
